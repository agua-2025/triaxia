require('dotenv').config({ path: '.env.local' });

async function testFullFlow() {
  console.log('üß™ Testando fluxo completo de checkout...');
  
  const testData = {
    plan: 'starter',
    tenantSlug: 'teste-email-flow',
    userEmail: 'vivendamirassol@gmail.com'
  };
  
  try {
    // 1. Criar sess√£o de checkout
    console.log('1Ô∏è‚É£ Criando sess√£o de checkout...');
    const checkoutResponse = await fetch('http://localhost:3001/api/stripe/checkout', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testData)
    });
    
    const checkoutData = await checkoutResponse.json();
    console.log('‚úÖ Checkout criado:', checkoutData.sessionId);
    console.log('üîó URL:', checkoutData.url);
    
    // 2. Simular finaliza√ß√£o (normalmente seria feita pelo Stripe)
    console.log('\n2Ô∏è‚É£ Simulando finaliza√ß√£o do pagamento...');
    const finalizeResponse = await fetch('http://localhost:3001/api/stripe/finalize', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        session_id: checkoutData.sessionId
      })
    });
    
    const finalizeData = await finalizeResponse.json();
    console.log('‚úÖ Finaliza√ß√£o:', finalizeData.message);
    
    if (finalizeData.ok) {
      console.log('üéâ Fluxo completo funcionando!');
      console.log('üìß Email de ativa√ß√£o deve ter sido enviado para:', testData.userEmail);
    } else {
      console.log('‚ùå Erro na finaliza√ß√£o:', finalizeData.message);
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

testFullFlow();